{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = require(\"../../assets/data/products.json\");\nvar ProductContainer = function ProductContainer() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    products = _useState2[0],\n    setProducts = _useState2[1];\n  useEffect(function () {\n    setProducts(data);\n    return function () {\n      setProducts([]);\n    };\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Blah blah blah\"\n    }), _jsx(FlatList, {\n      data: products,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Text, {\n          children: item.brand\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      }\n    })]\n  });\n};\nexport default ProductContainer;","map":{"version":3,"names":["React","useState","useEffect","data","require","ProductContainer","products","setProducts","item","brand","name"],"sources":["C:/Users/ahsan/Desktop/CherryTree/cherry-tree-ecommerce-frontend/Screens/Products/ProductContainer.js"],"sourcesContent":["import { View, Text, StyleSheet, ActivityIndicator, FlatList } from 'react-native'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\nconst data = require('../../assets/data/products.json');\r\n\r\n\r\nconst ProductContainer = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        setProducts(data);\r\n        return () =>{\r\n            setProducts([])\r\n        }\r\n    },[])\r\n  return (\r\n    <View>\r\n      <Text>Blah blah blah</Text>\r\n      <FlatList data={products}\r\n                renderItem = {({item})=> <Text>{item.brand}</Text>}\r\n                keyExtractor={item => item.name}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ProductContainer "],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA;AAAA;AAEhD,IAAMC,IAAI,GAAGC,OAAO,mCAAmC;AAGvD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;EAC3B,gBAAgCJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCK,QAAQ;IAAEC,WAAW;EAE5BL,SAAS,CAAC,YAAK;IACXK,WAAW,CAACJ,IAAI,CAAC;IACjB,OAAO,YAAK;MACRI,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC;EACL,CAAC,EAAC,EAAE,CAAC;EACP,OACE,MAAC,IAAI;IAAA,WACH,KAAC,IAAI;MAAA;IAAA,EAAsB,EAC3B,KAAC,QAAQ;MAAC,IAAI,EAAED,QAAS;MACf,UAAU,EAAI;QAAA,IAAEE,IAAI,QAAJA,IAAI;QAAA,OAAK,KAAC,IAAI;UAAA,UAAEA,IAAI,CAACC;QAAK,EAAQ;MAAA,CAAC;MACnD,YAAY,EAAE,sBAAAD,IAAI;QAAA,OAAIA,IAAI,CAACE,IAAI;MAAA;IAAC,EACxC;EAAA,EACG;AAEX,CAAC;AAED,eAAeL,gBAAgB"},"metadata":{},"sourceType":"module"}